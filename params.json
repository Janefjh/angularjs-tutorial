{
  "name": "Angularjs-tutorial",
  "tagline": "一份不全面的AngularJS入门到精通教程，一段曲折的开源之路，一个奇妙的全栈世界，从此一发不可收拾...",
  "body": "### 欢迎来到全栈大世界    \r\n这不是一份教你Hello world的码农界经典入门教程，也不是一份全面的像官方API一样的手册，也不是一本学完就保证你能盖起摩天大楼一样的web app的葵\r\n花宝典，这是一篇旨在用人话帮助小白们打通任督二脉、清除开发之路上的雾霾并且在全栈之路上愉快前行的通而不俗的博客。\r\n\r\n### AngularJS是啥？\r\n在我的学习观念里，不论学习一门怎样的新技术，最重要的一步永远都是先搞清楚它是什么，这样我们才知道为什么学习以及怎样高效的学习它.那么angularjs是啥呢，你大可去网上随便百度谷歌，会有一大堆的关于angular的介绍，但正如我初学时一样，我不希望被那些千篇一律的听不懂的话弄得晕头转向，从而丧失学习的兴趣，知识本身都是很有趣很有意义的，很多时候只是因为学习方式不对而令自己早早的丧失了学习的兴趣，这很可惜。那么angular到底是什么呢，google官方给出的定义是“Superheroic JavaScript MVW Framework”、“HTML enhanced for web apps”，翻译成人话大概就是“angularjs是一个能够帮助我们在开发web app的时候大大增强html的功能的超级无敌js框架”，还是懵逼脸？没关系，慢慢来。不必花费宝贵的时间在理解定义上，我们要弄懂的是知识本身而不是知识的定义。angularjs其实就是一个用javascript开发出来的框架，它能够在我们开发有大量交互（包括数据和界面）的web app的时候为我们提供非常强有力的帮助。举个最简单的栗子，如果你有五年开发经验的话，你肯定有过这样的经历：你要提交一个form表单，但为了迎合趋势，你不想用传统form表单提交，因为那会自动刷新页面，体验太差太土，于是你也开始用ajax提交，但这样的话，你得在js里（不管是原生还是jquery之类的前端框架）写一堆类似$(\".J-name\").val(\"\")之类的代码获取你想提交的表单项的值，然后再把他们封装成一个json对象，用ajax的方式提交给后台，各位未来的大神们，你们不觉得这种方式很烦吗。\r\n\r\n### AngularJS和jquery啥的有什么关系？\r\n有毛关系！唯一的共同点是他们都是javascript框架！\r\n\r\n### 什么是MVW？\r\nM：模型（数据模型），V：视图；W：whatever。\r\n\r\n### what are you 弄啥嘞，前端也有MVC？\r\n什么鬼？前端也有MVC？你TM在逗我？相信不少童鞋听说前端里也有MVC的概念的时候，就像听人说传媒也有搞计算机的一样惊奇。\r\n\r\n### 咋学AngularJS?\r\n毛主席说，实践是检验真理的唯一标准，所以，边看理论边实践去吧。\r\n理论的话，不推荐一上来就直接看官方API，可以买本书，然后跟着书慢慢写一些实例，遇到不懂得再去查API，最后可以把我的项目当一个综合实例（麻雀虽小，五脏俱全），可以在我的项目之上进行修改和拓展，最终你会成为大神。\r\n\r\n### 咋运行你这个项目？\r\n请先自行安装nodejs（如果node都不会安装，请自行放弃治疗）,然后npm install http-server,安装完成之后到项目根目录下用命令行运行http-server,成功之后在浏览器输入127.0.0.1:8080或者你的IP地址便可访问。（当然，也可以用其他方式创建一个本地服务器）\r\n\r\n### 我是谁？\r\n我是谁不重要，开源社会最重要！好吧，我只是一名93后菜鸟级全栈工程师，大家多多交流，科技世界，有开源才有发展！欢迎到GitHub上交流.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}